// Copyright (c) Bentley Systems, Incorporated. All rights reserved.
// See LICENSE.md in the project root for license terms and full copyright notice.

@mixin iui-button-group {
  all: unset;
  list-style-type: none;
  display: inline-flex;
  align-items: center;
  isolation: isolate;
  pointer-events: none;

  &[aria-orientation='horizontal'] {
    --_iui-button-active-stripe-inset-block: #{var(--iui-size-3xs)} calc(100% - #{var(--iui-size-2xs)});
    --_iui-button-active-stripe-inset-inline: #{var(--iui-size-3xs)};
    --_iui-button-group-inline-gap: -1px;
    --_iui-button-group-radius-first-bottom-left: var(--iui-border-radius-1);
    --_iui-button-group-radius-last-top-right: var(--iui-border-radius-1);
  }

  &[aria-orientation='vertical'] {
    --_iui-button-active-stripe-inset-block: #{var(--iui-size-3xs)};
    --_iui-button-active-stripe-inset-inline: #{var(--iui-size-3xs)} calc(100% - #{var(--iui-size-2xs)});
    --_iui-button-group-block-gap: -1px;
    --_iui-button-group-radius-first-top-right: var(--iui-border-radius-1);
    --_iui-button-group-radius-last-bottom-left: var(--iui-border-radius-1);

    flex-direction: column;
    max-block-size: 100%;
  }

  $childZindexSelector: '.iui-input-flex-container, .iui-button, .iui-input:where(:not(.iui-input-grid .iui-input))';
  $childBorderSelector: '.iui-input-flex-container, .iui-input, .iui-button:where(:not([data-iui-variant="borderless"])), .iui-input-flex-container::before';
  $disabledSelector: '&:disabled, &.iui-disabled, &[aria-disabled="true"]';

  > * {
    display: flex;

    > * {
      pointer-events: all;
    }

    #{$childZindexSelector} {
      position: relative;

      &:hover {
        z-index: 1;
      }

      #{$disabledSelector} {
        z-index: -1;
      }

      &:focus,
      &:focus-within {
        &,
        &:where([aria-disabled='true']) {
          z-index: 2;
        }
      }
    }

    #{$childBorderSelector} {
      // Reset border radius
      border-radius: 0;

      transition-duration: 0ms; // disable exit animation to avoid border flicker

      &:hover,
      &:focus {
        transition-duration: var(--iui-duration-1); // re-enable enter animation
      }
    }

    //#region Add rounded corners to first and last items
    &:first-child {
      #{$childBorderSelector} {
        border-start-start-radius: var(--iui-border-radius-1);
        border-end-start-radius: var(--_iui-button-group-radius-first-bottom-left);
        border-start-end-radius: var(--_iui-button-group-radius-first-top-right);
      }
    }

    &:last-child {
      #{$childBorderSelector} {
        border-end-end-radius: var(--iui-border-radius-1);
        border-end-start-radius: var(--_iui-button-group-radius-last-bottom-left);
        border-start-end-radius: var(--_iui-button-group-radius-last-top-right);
      }
    }
    //#endregion Add rounded corners to first and last items

    // Use negative margin to make adjacent borders overlap
    + * {
      margin-inline-start: var(--_iui-button-group-inline-gap);
      margin-block-start: var(--_iui-button-group-block-gap);
    }

    // Add slight border between disabled items
    &:not(:first-child) :not([data-iui-variant='borderless']) {
      #{$disabledSelector} {
        border-inline-start-color: var(--iui-color-border-disabled);
        border-block-start-color: var(--iui-color-border-disabled);
      }
    }
  }
}

@mixin iui-button-group-overflow-x {
  inline-size: 100%;
}
